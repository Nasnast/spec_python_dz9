'''Задание 1. Как дела?
 Вася совсем заскучал на работе и решил побаловаться с кодом проекта. Он
 написал надоедливый декоратор, который при вызове декорируемой функции
 спрашивает у пользователя «Как дела?», вне зависимости от ответа пишет что-то
 вроде «А у меня не очень!» и только потом запускает саму функцию. Правда, после
 такой выходки Васю чуть не уволили с работы.
 Реализуйте такой же декоратор и проверьте его работу на нескольких функциях.
 Пример кода:
 @how_are_you
 def test():
 print('<Тут что-то происходит...>')
 test()
 Результат:
 Как дела? Хорошо.
 А уменя не очень! Ладно, держи свою функцию.
 <Тут что-то происходит...>'''

from typing import Callable
from functools import wraps


def how_are_you(func: Callable):
    """Декоратор, который спрашивает у пользователя 'Какдела?' и
 выводит предопределенное сообщение перед вызовом декорируемой функции"""
    @wraps(func)
    def wrapper(*args, **kwargs):
        """ Функция-обертка,которая выполняет дополнительное поведение
 перед вызовом декорируемой функции"""
        text = input('Привет. Как дела? ')
        if text:
            print('А уменя не очень!')
        print('Ладно, держи свою функцию.')
        return func(*args, **kwargs)
    return wrapper

@how_are_you
def test():

    """Проверка декоратора и вывод простого сообщения"""

    print('<Тут что-то происходит...>')
    pass

if __name__ == '__main__':
    test()

